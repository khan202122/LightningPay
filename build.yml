name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

variables:
  srcPattern: 'src/**/*.csproj'
  samplesPattern: 'samples/**/*.csproj'
  testPattern: 'tests/**/*.csproj'
  buildConfiguration: 'Release'

trigger:
  branches:
    include: [ 'develop', 'master' ]
  paths:
    include: [ 'src', 'samples' ]

stages:

- stage : Build
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore src packages'
      inputs:
        command: restore
        projects: '$(srcPattern)'
    - task: DotNetCoreCLI@2
      displayName: 'Restore samples packages'
      inputs:
        command: restore
        projects: '$(samplesPattern)'
    - task: DotNetCoreCLI@2
      displayName: 'Build sources'
      inputs:
        command: build
        configuration: '$(buildConfiguration)'
        projects: '$(srcPattern)'
    - task: DotNetCoreCLI@2
      displayName: 'Build samples'
      inputs:
        command: build
        configuration: '$(buildConfiguration)'
        projects: '$(samplesPattern)'
    - task: CopyFiles@2
      displayName: 'Copy dll Artifact'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
            **/LightningPay.dll
            **/LightningPay.DependencyInjection.dll
        TargetFolder: '$(Build.ArtifactStagingDirectory)/dll'
        OverWrite: true
    - task: DotNetCoreCLI@2
      displayName: 'Build nuget packages'
      inputs:
        command: pack
        configuration: '$(buildConfiguration)'
        packagesToPack: '$(srcPattern)'
        versioningScheme: 'byBuildNumber'
        packDirectory: '$(Build.ArtifactStagingDirectory)/nuget'
    - publish: '$(Build.ArtifactStagingDirectory)/nuget'
      artifact: 'nuget'
    - publish: '$(Build.ArtifactStagingDirectory)/dll'
      artifact: 'dll'